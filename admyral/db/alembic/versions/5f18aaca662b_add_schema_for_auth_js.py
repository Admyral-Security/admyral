"""add schema for auth.js

Revision ID: 5f18aaca662b
Revises: 5b9dd35eb10b
Create Date: 2024-09-09 13:14:06.773051

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # noqa F401


# revision identifiers, used by Alembic.
revision: str = "5f18aaca662b"
down_revision: Union[str, None] = "5b9dd35eb10b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "User",
        sa.Column("id", sa.TEXT(), nullable=False),
        sa.Column("name", sa.TEXT(), nullable=True),
        sa.Column("email", sa.TEXT(), nullable=False),
        sa.Column("emailVerified", sa.TIMESTAMP(), nullable=True),
        sa.Column("image", sa.TEXT(), nullable=True),
        sa.Column(
            "createdAt",
            sa.TIMESTAMP(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("updatedAt", sa.TIMESTAMP(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "VerificationToken",
        sa.Column("identifier", sa.TEXT(), nullable=False),
        sa.Column("token", sa.TEXT(), nullable=False),
        sa.Column("expires", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("identifier", "token"),
        sa.UniqueConstraint("identifier", "token"),
    )
    op.create_table(
        "Account",
        sa.Column("userId", sa.TEXT(), nullable=False),
        sa.Column("type", sa.TEXT(), nullable=False),
        sa.Column("provider", sa.TEXT(), nullable=False),
        sa.Column("providerAccountId", sa.TEXT(), nullable=False),
        sa.Column("refresh_token", sa.TEXT(), nullable=True),
        sa.Column("access_token", sa.TEXT(), nullable=True),
        sa.Column("expires_at", sa.Integer(), nullable=True),
        sa.Column("token_type", sa.TEXT(), nullable=True),
        sa.Column("scope", sa.TEXT(), nullable=True),
        sa.Column("id_token", sa.TEXT(), nullable=True),
        sa.Column("session_state", sa.TEXT(), nullable=True),
        sa.Column(
            "createdAt",
            sa.TIMESTAMP(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("updatedAt", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(["userId"], ["User.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("provider", "providerAccountId"),
        sa.UniqueConstraint("provider", "providerAccountId"),
    )
    op.create_table(
        "Authenticator",
        sa.Column("credentialID", sa.TEXT(), nullable=False),
        sa.Column("userId", sa.TEXT(), nullable=False),
        sa.Column("providerAccountId", sa.TEXT(), nullable=False),
        sa.Column("credentialPublicKey", sa.TEXT(), nullable=False),
        sa.Column("counter", sa.Integer(), nullable=False),
        sa.Column("credentialDeviceType", sa.TEXT(), nullable=False),
        sa.Column("credentialBackedUp", sa.BOOLEAN(), nullable=False),
        sa.Column("transports", sa.TEXT(), nullable=True),
        sa.ForeignKeyConstraint(["userId"], ["User.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("credentialID", "userId"),
        sa.UniqueConstraint("credentialID"),
    )
    op.create_table(
        "Session",
        sa.Column("id", sa.TEXT(), nullable=False),
        sa.Column("sessionToken", sa.TEXT(), nullable=False),
        sa.Column("userId", sa.TEXT(), nullable=False),
        sa.Column("expires", sa.DateTime(), nullable=False),
        sa.Column(
            "createdAt",
            sa.TIMESTAMP(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("updatedAt", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(["userId"], ["User.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("sessionToken"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("Session")
    op.drop_table("Authenticator")
    op.drop_table("Account")
    op.drop_table("VerificationToken")
    op.drop_table("User")
    # ### end Alembic commands ###
