# Prepare Python dependencies
FROM python:3.12-slim-bookworm AS requirements-stage
WORKDIR /tmp
RUN pip install poetry
COPY ./pyproject.toml ./poetry.lock* /tmp/
RUN poetry config virtualenvs.create false && \
    poetry export -f requirements.txt --output requirements.txt --without-hashes


# Build the final image
FROM python:3.12-slim-bookworm

# set working directory
WORKDIR /usr/src/app

# prevent python from writing pyc files to disk
ENV PYTHONDONTWRITEBYTECODE 1
# prevent python from buffering stdout and stderr
ENV PYTHONUNBUFFERED 1

# install dependencies
RUN echo "Acquire::http::Pipeline-Depth 0;" > /etc/apt/apt.conf.d/99custom && \
    echo "Acquire::http::No-Cache true;" >> /etc/apt/apt.conf.d/99custom && \
    echo "Acquire::BrokenProxy    true;" >> /etc/apt/apt.conf.d/99custom
RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y \
    libprotobuf-dev \
    libnl-route-3-dev \
    vim \
    curl \
    && rm -rf /var/lib/apt/lists/*

# install python dependencies
RUN pip install --upgrade pip
COPY --from=requirements-stage /tmp/requirements.txt .
RUN pip install -r requirements.txt

# add admyral
COPY . .

EXPOSE 8000

CMD ["python", "-m", "admyral.main", "api", "--docker"]
