"""add workflow templates

Revision ID: fb54865daf72
Revises: fa470fefe8eb
Create Date: 2024-04-24 13:51:26.328579

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fb54865daf72'
down_revision = 'fa470fefe8eb'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('workflow_template_metadata',
    sa.Column('workflow_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('template_headline', sa.TEXT(), nullable=False),
    sa.Column('template_description', sa.TEXT(), nullable=False),
    sa.Column('category', sa.TEXT(), nullable=False),
    sa.Column('icon', sa.TEXT(), nullable=False),
    sa.ForeignKeyConstraint(['workflow_id'], ['admyral.workflow.workflow_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('workflow_id'),
    schema='admyral'
    )

    # To migrate to a non-nullable column, we need to first add to existing rows a default value and then
    # change the column to non-nullable afterwards.
    op.add_column('workflow', sa.Column('is_template', sa.Boolean(), default=False), schema='admyral')
    op.execute("UPDATE admyral.workflow SET is_template = FALSE")
    op.alter_column('workflow', 'is_template', nullable=False, schema='admyral')

    op.alter_column('workflow', 'user_id',
               existing_type=sa.UUID(),
               nullable=True,
               schema='admyral')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('workflow', 'user_id',
               existing_type=sa.UUID(),
               nullable=False,
               schema='admyral')
    op.drop_column('workflow', 'is_template', schema='admyral')
    op.drop_table('workflow_template_metadata', schema='admyral')
    # ### end Alembic commands ###
