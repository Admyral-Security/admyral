name: Lint and Unit Tests
on:
  workflow_call:
    inputs:
      os:
        description: OS
        required: false
        default: ubuntu-latest
        type: string
      git-ref:
        description: Git branch or ref
        required: false
        default: ""
        type: string
jobs:
  python-unit-test:
    name: Python Unit Tests
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Temporal CLI
        run: |
          curl -L https://temporal.download/cli?arch=amd64 | sudo tar -C /usr/local/bin -xz

      - name: Start Temporal Dev Server
        run: |
          nohup temporal server start-dev > temporal.log 2>&1 &

      - name: Wait for Temporal server to be ready
        run: |
          while ! nc -z localhost 7233; do   
            sleep 5
            echo "Waiting for Temporal to be ready..."
          done

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install Poetry
        uses: snok/install-poetry@v1.4.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install

      - name: Run linter
        run: poetry run ruff format --check

      - name: Run linter
        run: poetry run ruff check

      - name: Run unit tests
        run: poetry run pytest tests/

  web-unit-test:
    name: Web Unit Tests
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 9

      - name: Install dependencies
        run: cd web && pnpm install

      - name: Run linter
        run: cd web && pnpm lint

      - name: Run prettier check
        run: cd web && pnpm prettier:check

      - name: Run build
        run: cd web && pnpm build

      # TODO: activate when tests are available
      # - name: Run unit tests
      #   run: cd web && pnpm test
